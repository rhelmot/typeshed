from _typeshed import Incomplete

def strategy_largest_first(G, colors): ...
def strategy_random_sequential(G, colors, seed: Incomplete | None = None): ...
def strategy_smallest_last(G, colors): ...
def strategy_independent_set(G, colors) -> None: ...
def strategy_connected_sequential_bfs(G, colors): ...
def strategy_connected_sequential_dfs(G, colors): ...
def strategy_connected_sequential(G, colors, traversal: str = "bfs") -> None: ...
def strategy_saturation_largest_first(G, colors): ...
def greedy_color(G, strategy: str = "largest_first", interchange: bool = False): ...
